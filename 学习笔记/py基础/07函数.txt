day7 
2018.3.21
17:15


函数
    概述
      本质:是对功能的封装
      优点:简化代码结构,增加代码的复用度;修改简便
    定义函数
	def 函数名(参数列表):
		语句
		return 表达式
    函数的调用
        函数名(参数列表)
	本质是实参给形参赋值的过程
    简单的函数
    函数的参数
	def myPrint(str,age):
	    print(str,age)
	myPrint('guo is a good man',18) #调用
    函数的返回值
        return   执行完return语句,函数结束,return同级下一行的代码不执行
    参数的传递
        值传递:传递不可变类型
	引用传递:传递可变类型
    关键字参数
        概念:允许函数调用时参数的顺序与定义不一致
    默认参数
        调用函数时,如果没有传递参数,则使用默认参数(默认参数最好放到最后一位)
    不定长参数
        加了* 的参数:用来存放所有未命名的变量参数,以元组形式存储元素
	加了**的参数:用来存放键值对,以key = value 形式,以字典形式存放
    匿名函数
    	本质:lambda表达式
	特点:
	    比def 简单
	    lambda的主体是表达式,仅仅只能在lambda表达式中封装简单的逻辑
	    lambda函数有自己的命名空间,且不能访问自由参数列表之外的或全局命名空间的参数
	格式:lambda 参数1,参数2...  : 表达式

        
偏函数
    概念:将函数中的默认值进行设置,返回一个新的函数,调用这个新函数会更简单
    例如:int3 = functools.partial(int,base = 2)
         print(int3('0101')) # 输出5


局部变量与全局变量
    作用域:
        变量可以使用的范围
	程序的变量不是所有的位置都能使用,访问的权限取决于赋值的位置
	分类
	    局部作用域
	    函数作用域(闭包以外的函数)
	    全局作用域
	    内建作用域
	优先级:局部
	作用域的范围:
	    python中只有模块,函数,类才会引入新的作用域
    全局变量

异常处理
    概念:当程序遇到问题时不让程序结束,而越过错误继续向下执行
    格式1:
    try:
       可能出错的语句
    except 错误码 as e:
	表达式
    
    作用:用来检测try语句块中错误,从而让except语句捕获错误信息并处理
     
    格式2:
    try:
    	可能出错的语句
    except 错误码 as e:
        表达式
    finally:
    	表达式


















