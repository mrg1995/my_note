day3 
2018.3.15

运算符与表达式
    表达式
        由变量,常量和运算符组成的式子称为表达式
    运算符
        算数运算符与算数运算表达式
        赋值运算符与赋值运算表达式
	复合运算符
	位运算符
	关系运算符和关系运算符表达式
        逻辑运算符
	    and 且 有短路原则(已判断表达式1为假,将不会继续判断表达式二)
	成员运算符
	身份运算符
	    is  
	    not is
	      例如:a is b 是判断a 和 b 的内存地址是否一致
	      而a == b 是判断a 和 b 的值是否相等
	      注意: 关于内存地址,如果变量是数字类型,创建一个内存空间,如a = 1,先创建一个内存空间再把内存地址给 a 
	      再创建一个变量 b = 1 , 会先判断内存中是否已有1,若有将其内存地址给b;若没有,重新创建一个内存空间
	      如果变量是一个列表,创建此变量时,会直接开辟一个空间,存储相应的值
        运算符优先级
	    若有不清楚的,直接加()即可

布尔值和空值
    布尔值
        一个布尔值只有true , false 两种值
	true : 非假即真
	false: false  0(非0即真) 非空即真(空格也是字符)

    空值
        None 是一个特殊的值 ,且不指向内存地址

string字符串
    字符串用''单引号 或者""双引号来创建
    字符串运算及操作
        str=[1,2,3]
        + 字符串连接
	* 重复输出字符串
	[] 访问字符串中的某一个字符
	  例如: print(str[1]) 输出2  (从零开始计数)
	[:] 截取字符串的某一部分
	  例如:倒序 print(str[::-1]) 输出[3,2,1]
	  print(str[:1]) 输出[1]
	  [初始值:终值:步长] 初值可以省略,即从0开始
	  终值可以省略,即到结束为止
	  步长是间隔
        in / not in 成员运算符
	%格式化输出(字符串占位符)
	    %d 格式化整数
	    %s 格式化字符串
	    %f 格式化浮点数(%.2f 为数值保留2位小数)
    转意字符
      \n 换行符
      \\ 反斜杠
      \' 单引号
      \" 双引号
      \t 横向制表符
      """ """ 中间可以放换行的字符串
      如果字符中有很多字符串都需要转意,可以在字符串前加r,表示字符串内部默认不转义
    字符串操作
        len() 返回对象(字符,列表,元组等)长度或项目个数
	eval(x) x为字符串表达式,返回表达式的值
	str.lower(x) 转换字符串中所以大写字符为小写
	str.upper(x) 转换字符串中的小写字符为大写
	str.swapcase() 翻转字符串中的大小写
	str.capitalize() 把字符串中的第一个字符大写
	    注意:该字符串第一个字符必须是需要转换的小写字符
        str.title() 返回'标题化'的字符串(所有单词以大写开头)
	str.center(width[,fillchar]) 返回原字符串居中,使用你输入的字符填充至长度
	    例如: a = '123'
	        print(str.center(a,20,'*'))
		输出  ********123*********
        str.ljust(width[,fillchar])返回原字符串左对齐,使用你输入的字符填充至长度
        str.rjust(widt[,chillchar])返回原字符串右对齐,使用你输入的字符填充至长度
        str.count(str1[,start,end])返回字符串str 在 原字符串中出现大的次数,start是初始值(不写默认从0开始),end是结束值(不写默认结尾)
           例如: a = '123abc'
	      print (a.count('1'))
	      输出1
        str.find(str1[,start,end]) 检查字符串str是否在原字符串中,如果是返回开始的索引值,否则返回-1
	str.index(str1[,start,end]) 与str.find()类似,当没有时会报错
	str.rindex(str1[,start,end]) 与str.index()类似,但是从右边开始
        str.lstrip() 截掉字符串左侧指定的字符
	   例如: a = '123'
	   print(str.lstrip(a,'1'))
	   输出23
        str.rstrip() 截掉字符串右侧指定字符
	str.strip()截掉字符串左右两侧指定字符
	chr()用一个范围在range(256)内的(就是0~255)整数作为参数,返回相应的字符
	ord()将一个ASCII字符转化为对应的数字

if结构语句
     格式1
     if 判断语句:
     	语句
     格式2
     if 判断语句:
     	语句1
     else:
        语句2
     格式3
      if 判断语句:
	语句1
      elif 判断语句:
        语句2
      ....
      else:
         语句3
   if可以嵌套



